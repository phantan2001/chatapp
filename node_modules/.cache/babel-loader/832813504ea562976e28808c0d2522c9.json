{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\fun-chat\\\\src\\\\Context\\\\AuthProvider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { auth } from '../firebase/config';\nimport { Spin } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/React.createContext();\nexport default function AuthProvider({\n  children\n}) {\n  _s();\n\n  const [user, setUser] = useState({});\n  const history = useHistory();\n  const [isLoading, setIsLoading] = useState(true);\n  React.useEffect(() => {\n    const unsubscibed = auth.onAuthStateChanged(user => {\n      if (user) {\n        const {\n          displayName,\n          email,\n          uid,\n          photoURL\n        } = user;\n        setUser({\n          displayName,\n          email,\n          uid,\n          photoURL\n        });\n        setIsLoading(false);\n        history.push('/');\n        return;\n      } // reset user info\n\n\n      setUser({});\n      setIsLoading(false);\n      history.push('/login');\n    }); // clean function\n\n    return () => {\n      unsubscibed();\n    };\n  }, [history]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user\n    },\n    children: isLoading ? /*#__PURE__*/_jsxDEV(Spin, {\n      style: {\n        position: 'fixed',\n        inset: 0\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 20\n    }, this) : children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AuthProvider, \"o9TOeKgZZnjpaHY94AVr78qCgsc=\", false, function () {\n  return [useHistory];\n});\n\n_c = AuthProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["C:/Users/DELL/fun-chat/src/Context/AuthProvider.js"],"names":["React","useState","useHistory","auth","Spin","AuthContext","createContext","AuthProvider","children","user","setUser","history","isLoading","setIsLoading","useEffect","unsubscibed","onAuthStateChanged","displayName","email","uid","photoURL","push","position","inset"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,IAAT,QAAqB,oBAArB;AACA,SAASC,IAAT,QAAqB,MAArB;;AAEA,OAAO,MAAMC,WAAW,gBAAGL,KAAK,CAACM,aAAN,EAApB;AAEP,eAAe,SAASC,YAAT,CAAsB;AAAEC,EAAAA;AAAF,CAAtB,EAAoC;AAAA;;AACjD,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAMU,OAAO,GAAGT,UAAU,EAA1B;AACA,QAAM,CAACU,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAC,IAAD,CAA1C;AAEAD,EAAAA,KAAK,CAACc,SAAN,CAAgB,MAAM;AACpB,UAAMC,WAAW,GAAGZ,IAAI,CAACa,kBAAL,CAAyBP,IAAD,IAAU;AACpD,UAAIA,IAAJ,EAAU;AACR,cAAM;AAAEQ,UAAAA,WAAF;AAAeC,UAAAA,KAAf;AAAsBC,UAAAA,GAAtB;AAA2BC,UAAAA;AAA3B,YAAwCX,IAA9C;AACAC,QAAAA,OAAO,CAAC;AACNO,UAAAA,WADM;AAENC,UAAAA,KAFM;AAGNC,UAAAA,GAHM;AAINC,UAAAA;AAJM,SAAD,CAAP;AAMAP,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACAF,QAAAA,OAAO,CAACU,IAAR,CAAa,GAAb;AACA;AACD,OAZmD,CAcpD;;;AACAX,MAAAA,OAAO,CAAC,EAAD,CAAP;AACAG,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAF,MAAAA,OAAO,CAACU,IAAR,CAAa,QAAb;AACD,KAlBmB,CAApB,CADoB,CAqBpB;;AACA,WAAO,MAAM;AACXN,MAAAA,WAAW;AACZ,KAFD;AAGD,GAzBD,EAyBG,CAACJ,OAAD,CAzBH;AA2BA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAEF,MAAAA;AAAF,KAA7B;AAAA,cACGG,SAAS,gBAAG,QAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAEU,QAAAA,QAAQ,EAAE,OAAZ;AAAqBC,QAAAA,KAAK,EAAE;AAA5B;AAAb;AAAA;AAAA;AAAA;AAAA,YAAH,GAAsDf;AADlE;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GArCuBD,Y;UAENL,U;;;KAFMK,Y","sourcesContent":["import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { auth } from '../firebase/config';\r\nimport { Spin } from 'antd';\r\n\r\nexport const AuthContext = React.createContext();\r\n\r\nexport default function AuthProvider({ children }) {\r\n  const [user, setUser] = useState({});\r\n  const history = useHistory();\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  React.useEffect(() => {\r\n    const unsubscibed = auth.onAuthStateChanged((user) => {\r\n      if (user) {\r\n        const { displayName, email, uid, photoURL } = user;\r\n        setUser({\r\n          displayName,\r\n          email,\r\n          uid,\r\n          photoURL,\r\n        });\r\n        setIsLoading(false);\r\n        history.push('/');\r\n        return;\r\n      }\r\n\r\n      // reset user info\r\n      setUser({});\r\n      setIsLoading(false);\r\n      history.push('/login');\r\n    });\r\n\r\n    // clean function\r\n    return () => {\r\n      unsubscibed();\r\n    };\r\n  }, [history]);\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user }}>\r\n      {isLoading ? <Spin style={{ position: 'fixed', inset: 0 }} /> : children}\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}