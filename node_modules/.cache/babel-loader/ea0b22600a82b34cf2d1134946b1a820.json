{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\fun-chat\\\\src\\\\Context\\\\AppProvider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport useFirestore from '../hooks/useFirestore';\nimport { AuthContext } from './AuthProvider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AppContext = /*#__PURE__*/React.createContext();\nexport default function AppProvider({\n  children\n}) {\n  _s();\n\n  const [isAddRoomVisible, setIsAddRoomVisible] = useState(false);\n  const [isInviteMemberVisible, setIsInviteMemberVisible] = useState(false);\n  const [selectedRoomId, setSelectedRoomId] = useState('');\n  const {\n    user: {\n      uid\n    }\n  } = React.useContext(AuthContext);\n  const roomsCondition = React.useMemo(() => {\n    return {\n      fieldName: 'members',\n      operator: 'array-contains',\n      compareValue: uid\n    };\n  }, [uid]);\n  const rooms = useFirestore('rooms', roomsCondition);\n  const selectedRoom = React.useMemo(() => rooms.find(room => room.id === selectedRoomId) || {}, [rooms, selectedRoomId]);\n  const usersCondition = React.useMemo(() => {\n    return {\n      fieldName: 'uid',\n      operator: 'in',\n      compareValue: selectedRoom.members\n    };\n  }, [selectedRoom.members]);\n  const members = useFirestore('users', usersCondition);\n\n  const clearState = () => {\n    setSelectedRoomId('');\n    setIsAddRoomVisible(false);\n    setIsInviteMemberVisible(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      rooms,\n      members,\n      selectedRoom,\n      isAddRoomVisible,\n      setIsAddRoomVisible,\n      selectedRoomId,\n      setSelectedRoomId,\n      isInviteMemberVisible,\n      setIsInviteMemberVisible,\n      clearState\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AppProvider, \"0/Iq14X6W0qs+9QbfKUpidPDyZg=\", false, function () {\n  return [useFirestore, useFirestore];\n});\n\n_c = AppProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"sources":["C:/Users/DELL/fun-chat/src/Context/AppProvider.js"],"names":["React","useState","useFirestore","AuthContext","AppContext","createContext","AppProvider","children","isAddRoomVisible","setIsAddRoomVisible","isInviteMemberVisible","setIsInviteMemberVisible","selectedRoomId","setSelectedRoomId","user","uid","useContext","roomsCondition","useMemo","fieldName","operator","compareValue","rooms","selectedRoom","find","room","id","usersCondition","members","clearState"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,SAASC,WAAT,QAA4B,gBAA5B;;AAEA,OAAO,MAAMC,UAAU,gBAAGJ,KAAK,CAACK,aAAN,EAAnB;AAEP,eAAe,SAASC,WAAT,CAAqB;AAAEC,EAAAA;AAAF,CAArB,EAAmC;AAAA;;AAChD,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CR,QAAQ,CAAC,KAAD,CAAxD;AACA,QAAM,CAACS,qBAAD,EAAwBC,wBAAxB,IAAoDV,QAAQ,CAAC,KAAD,CAAlE;AACA,QAAM,CAACW,cAAD,EAAiBC,iBAAjB,IAAsCZ,QAAQ,CAAC,EAAD,CAApD;AAEA,QAAM;AACJa,IAAAA,IAAI,EAAE;AAAEC,MAAAA;AAAF;AADF,MAEFf,KAAK,CAACgB,UAAN,CAAiBb,WAAjB,CAFJ;AAIA,QAAMc,cAAc,GAAGjB,KAAK,CAACkB,OAAN,CAAc,MAAM;AACzC,WAAO;AACLC,MAAAA,SAAS,EAAE,SADN;AAELC,MAAAA,QAAQ,EAAE,gBAFL;AAGLC,MAAAA,YAAY,EAAEN;AAHT,KAAP;AAKD,GANsB,EAMpB,CAACA,GAAD,CANoB,CAAvB;AAQA,QAAMO,KAAK,GAAGpB,YAAY,CAAC,OAAD,EAAUe,cAAV,CAA1B;AAEA,QAAMM,YAAY,GAAGvB,KAAK,CAACkB,OAAN,CACnB,MAAMI,KAAK,CAACE,IAAN,CAAYC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYd,cAAjC,KAAoD,EADvC,EAEnB,CAACU,KAAD,EAAQV,cAAR,CAFmB,CAArB;AAKA,QAAMe,cAAc,GAAG3B,KAAK,CAACkB,OAAN,CAAc,MAAM;AACzC,WAAO;AACLC,MAAAA,SAAS,EAAE,KADN;AAELC,MAAAA,QAAQ,EAAE,IAFL;AAGLC,MAAAA,YAAY,EAAEE,YAAY,CAACK;AAHtB,KAAP;AAKD,GANsB,EAMpB,CAACL,YAAY,CAACK,OAAd,CANoB,CAAvB;AAQA,QAAMA,OAAO,GAAG1B,YAAY,CAAC,OAAD,EAAUyB,cAAV,CAA5B;;AAEA,QAAME,UAAU,GAAG,MAAM;AACvBhB,IAAAA,iBAAiB,CAAC,EAAD,CAAjB;AACAJ,IAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACAE,IAAAA,wBAAwB,CAAC,KAAD,CAAxB;AACD,GAJD;;AAMA,sBACE,QAAC,UAAD,CAAY,QAAZ;AACE,IAAA,KAAK,EAAE;AACLW,MAAAA,KADK;AAELM,MAAAA,OAFK;AAGLL,MAAAA,YAHK;AAILf,MAAAA,gBAJK;AAKLC,MAAAA,mBALK;AAMLG,MAAAA,cANK;AAOLC,MAAAA,iBAPK;AAQLH,MAAAA,qBARK;AASLC,MAAAA,wBATK;AAULkB,MAAAA;AAVK,KADT;AAAA,cAcGtB;AAdH;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD;;GA1DuBD,W;UAiBRJ,Y,EAeEA,Y;;;KAhCMI,W","sourcesContent":["import React, { useState } from 'react';\r\nimport useFirestore from '../hooks/useFirestore';\r\nimport { AuthContext } from './AuthProvider';\r\n\r\nexport const AppContext = React.createContext();\r\n\r\nexport default function AppProvider({ children }) {\r\n  const [isAddRoomVisible, setIsAddRoomVisible] = useState(false);\r\n  const [isInviteMemberVisible, setIsInviteMemberVisible] = useState(false);\r\n  const [selectedRoomId, setSelectedRoomId] = useState('');\r\n\r\n  const {\r\n    user: { uid },\r\n  } = React.useContext(AuthContext);\r\n\r\n  const roomsCondition = React.useMemo(() => {\r\n    return {\r\n      fieldName: 'members',\r\n      operator: 'array-contains',\r\n      compareValue: uid,\r\n    };\r\n  }, [uid]);\r\n\r\n  const rooms = useFirestore('rooms', roomsCondition);\r\n\r\n  const selectedRoom = React.useMemo(\r\n    () => rooms.find((room) => room.id === selectedRoomId) || {},\r\n    [rooms, selectedRoomId]\r\n  );\r\n\r\n  const usersCondition = React.useMemo(() => {\r\n    return {\r\n      fieldName: 'uid',\r\n      operator: 'in',\r\n      compareValue: selectedRoom.members,\r\n    };\r\n  }, [selectedRoom.members]);\r\n\r\n  const members = useFirestore('users', usersCondition);\r\n\r\n  const clearState = () => {\r\n    setSelectedRoomId('');\r\n    setIsAddRoomVisible(false);\r\n    setIsInviteMemberVisible(false);\r\n  };\r\n\r\n  return (\r\n    <AppContext.Provider\r\n      value={{\r\n        rooms,\r\n        members,\r\n        selectedRoom,\r\n        isAddRoomVisible,\r\n        setIsAddRoomVisible,\r\n        selectedRoomId,\r\n        setSelectedRoomId,\r\n        isInviteMemberVisible,\r\n        setIsInviteMemberVisible,\r\n        clearState,\r\n      }}\r\n    >\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}