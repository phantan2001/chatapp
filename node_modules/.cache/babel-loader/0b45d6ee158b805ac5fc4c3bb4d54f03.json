{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\fun-chat\\\\src\\\\components\\\\Modals\\\\InviteMemberModal.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useContext, useState } from 'react';\nimport { Form, Modal, Select, Spin, Avatar } from 'antd';\nimport { AppContext } from '../../Context/AppProvider';\nimport { debounce } from 'lodash';\nimport { db } from '../../firebase/config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DebounceSelect({\n  fetchOptions,\n  debounceTimeout = 300,\n  curMembers,\n  ...props\n}) {\n  _s();\n\n  // Search: abcddassdfasdf\n  const [fetching, setFetching] = useState(false);\n  const [options, setOptions] = useState([]);\n  const debounceFetcher = React.useMemo(() => {\n    const loadOptions = value => {\n      setOptions([]);\n      setFetching(true);\n      fetchOptions(value, curMembers).then(newOptions => {\n        setOptions(newOptions);\n        setFetching(false);\n      });\n    };\n\n    return debounce(loadOptions, debounceTimeout);\n  }, [debounceTimeout, fetchOptions, curMembers]);\n  React.useEffect(() => {\n    return () => {\n      // clear when unmount\n      setOptions([]);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Select, {\n    labelInValue: true,\n    filterOption: false,\n    onSearch: debounceFetcher,\n    notFoundContent: fetching ? /*#__PURE__*/_jsxDEV(Spin, {\n      size: \"small\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 35\n    }, this) : null,\n    ...props,\n    children: options.map(opt => {\n      var _opt$label, _opt$label$charAt;\n\n      return /*#__PURE__*/_jsxDEV(Select.Option, {\n        value: opt.value,\n        title: opt.label,\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          size: \"small\",\n          src: opt.photoURL,\n          children: opt.photoURL ? '' : (_opt$label = opt.label) === null || _opt$label === void 0 ? void 0 : (_opt$label$charAt = _opt$label.charAt(0)) === null || _opt$label$charAt === void 0 ? void 0 : _opt$label$charAt.toUpperCase()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), ` ${opt.label}`]\n      }, opt.value, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DebounceSelect, \"gToL04qslbL0b/40wFF9JbY6M9c=\");\n\n_c = DebounceSelect;\n\nasync function fetchUserList(search, curMembers) {\n  return db.collection('users').where('keywords', 'array-contains', search === null || search === void 0 ? void 0 : search.toLowerCase()).orderBy('displayName').limit(20).get().then(snapshot => {\n    return snapshot.docs.map(doc => ({\n      label: doc.data().displayName,\n      value: doc.data().uid,\n      photoURL: doc.data().photoURL\n    })).filter(opt => !curMembers.includes(opt.value));\n  });\n}\n\nexport default function InviteMemberModal() {\n  _s2();\n\n  const {\n    isInviteMemberVisible,\n    setIsInviteMemberVisible,\n    selectedRoomId,\n    selectedRoom\n  } = useContext(AppContext);\n  const [value, setValue] = useState([]);\n  const [form] = Form.useForm();\n\n  const handleOk = () => {\n    // reset form value\n    form.resetFields();\n    setValue([]); // update members in current room\n\n    const roomRef = db.collection('rooms').doc(selectedRoomId);\n    roomRef.update({\n      members: [...selectedRoom.members, ...value.map(val => val.value)]\n    });\n    setIsInviteMemberVisible(false);\n  };\n\n  const handleCancel = () => {\n    // reset form value\n    form.resetFields();\n    setValue([]);\n    setIsInviteMemberVisible(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      title: \"M\\u1EDDi th\\xEAm th\\xE0nh vi\\xEAn\",\n      visible: isInviteMemberVisible,\n      onOk: handleOk,\n      onCancel: handleCancel,\n      destroyOnClose: true,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        form: form,\n        layout: \"vertical\",\n        children: /*#__PURE__*/_jsxDEV(DebounceSelect, {\n          mode: \"multiple\",\n          name: \"search-user\",\n          label: \"T\\xEAn c\\xE1c th\\xE0nh vi\\xEAn\",\n          value: value,\n          placeholder: \"Nh\\u1EADp t\\xEAn th\\xE0nh vi\\xEAn\",\n          fetchOptions: fetchUserList,\n          onChange: newValue => setValue(newValue),\n          style: {\n            width: '100%'\n          },\n          curMembers: selectedRoom.members\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(InviteMemberModal, \"9olXplpuxowEbGYE8KG4hVr+dQk=\", false, function () {\n  return [Form.useForm];\n});\n\n_c2 = InviteMemberModal;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"DebounceSelect\");\n$RefreshReg$(_c2, \"InviteMemberModal\");","map":{"version":3,"sources":["C:/Users/DELL/fun-chat/src/components/Modals/InviteMemberModal.js"],"names":["React","useContext","useState","Form","Modal","Select","Spin","Avatar","AppContext","debounce","db","DebounceSelect","fetchOptions","debounceTimeout","curMembers","props","fetching","setFetching","options","setOptions","debounceFetcher","useMemo","loadOptions","value","then","newOptions","useEffect","map","opt","label","photoURL","charAt","toUpperCase","fetchUserList","search","collection","where","toLowerCase","orderBy","limit","get","snapshot","docs","doc","data","displayName","uid","filter","includes","InviteMemberModal","isInviteMemberVisible","setIsInviteMemberVisible","selectedRoomId","selectedRoom","setValue","form","useForm","handleOk","resetFields","roomRef","update","members","val","handleCancel","newValue","width"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react';\r\nimport { Form, Modal, Select, Spin, Avatar } from 'antd';\r\nimport { AppContext } from '../../Context/AppProvider';\r\nimport { debounce } from 'lodash';\r\nimport { db } from '../../firebase/config';\r\n\r\nfunction DebounceSelect({\r\n  fetchOptions,\r\n  debounceTimeout = 300,\r\n  curMembers,\r\n  ...props\r\n}) {\r\n  // Search: abcddassdfasdf\r\n\r\n  const [fetching, setFetching] = useState(false);\r\n  const [options, setOptions] = useState([]);\r\n\r\n  const debounceFetcher = React.useMemo(() => {\r\n    const loadOptions = (value) => {\r\n      setOptions([]);\r\n      setFetching(true);\r\n\r\n      fetchOptions(value, curMembers).then((newOptions) => {\r\n        setOptions(newOptions);\r\n        setFetching(false);\r\n      });\r\n    };\r\n\r\n    return debounce(loadOptions, debounceTimeout);\r\n  }, [debounceTimeout, fetchOptions, curMembers]);\r\n\r\n  React.useEffect(() => {\r\n    return () => {\r\n      // clear when unmount\r\n      setOptions([]);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <Select\r\n      labelInValue\r\n      filterOption={false}\r\n      onSearch={debounceFetcher}\r\n      notFoundContent={fetching ? <Spin size='small' /> : null}\r\n      {...props}\r\n    >\r\n      {options.map((opt) => (\r\n        <Select.Option key={opt.value} value={opt.value} title={opt.label}>\r\n          <Avatar size='small' src={opt.photoURL}>\r\n            {opt.photoURL ? '' : opt.label?.charAt(0)?.toUpperCase()}\r\n          </Avatar>\r\n          {` ${opt.label}`}\r\n        </Select.Option>\r\n      ))}\r\n    </Select>\r\n  );\r\n}\r\n\r\nasync function fetchUserList(search, curMembers) {\r\n  return db\r\n    .collection('users')\r\n    .where('keywords', 'array-contains', search?.toLowerCase())\r\n    .orderBy('displayName')\r\n    .limit(20)\r\n    .get()\r\n    .then((snapshot) => {\r\n      return snapshot.docs\r\n        .map((doc) => ({\r\n          label: doc.data().displayName,\r\n          value: doc.data().uid,\r\n          photoURL: doc.data().photoURL,\r\n        }))\r\n        .filter((opt) => !curMembers.includes(opt.value));\r\n    });\r\n}\r\n\r\nexport default function InviteMemberModal() {\r\n  const {\r\n    isInviteMemberVisible,\r\n    setIsInviteMemberVisible,\r\n    selectedRoomId,\r\n    selectedRoom,\r\n  } = useContext(AppContext);\r\n  const [value, setValue] = useState([]);\r\n  const [form] = Form.useForm();\r\n\r\n  const handleOk = () => {\r\n    // reset form value\r\n    form.resetFields();\r\n    setValue([]);\r\n\r\n    // update members in current room\r\n    const roomRef = db.collection('rooms').doc(selectedRoomId);\r\n\r\n    roomRef.update({\r\n      members: [...selectedRoom.members, ...value.map((val) => val.value)],\r\n    });\r\n\r\n    setIsInviteMemberVisible(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    // reset form value\r\n    form.resetFields();\r\n    setValue([]);\r\n\r\n    setIsInviteMemberVisible(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Modal\r\n        title='Mời thêm thành viên'\r\n        visible={isInviteMemberVisible}\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n        destroyOnClose={true}\r\n      >\r\n        <Form form={form} layout='vertical'>\r\n          <DebounceSelect\r\n            mode='multiple'\r\n            name='search-user'\r\n            label='Tên các thành viên'\r\n            value={value}\r\n            placeholder='Nhập tên thành viên'\r\n            fetchOptions={fetchUserList}\r\n            onChange={(newValue) => setValue(newValue)}\r\n            style={{ width: '100%' }}\r\n            curMembers={selectedRoom.members}\r\n          />\r\n        </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}