{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { db } from '../firebase/config';\n\nconst useFirestore = (collection, condition) => {\n  _s();\n\n  const [documents, setDocuments] = useState([]);\n  React.useEffect(() => {\n    let collectionRef = db.collection(collection).orderBy('createdAt');\n\n    if (condition) {\n      if (!condition.compareValue || !condition.compareValue.length) {\n        // reset documents data\n        setDocuments([]);\n        return;\n      }\n\n      collectionRef = collectionRef.where(condition.fieldName, condition.operator, condition.compareValue);\n    }\n\n    const unsubscribe = collectionRef.onSnapshot(snapshot => {\n      const documents = snapshot.docs.map(doc => ({ ...doc.data(),\n        id: doc.id\n      }));\n      setDocuments(documents);\n    });\n    return unsubscribe;\n  }, [collection, condition]);\n  return documents;\n};\n\n_s(useFirestore, \"yer53JIs/Enm5EWW99jBywEKfS0=\");\n\nexport default useFirestore;","map":{"version":3,"sources":["C:/Users/DELL/fun-chat/src/hooks/useFirestore.js"],"names":["React","useState","db","useFirestore","collection","condition","documents","setDocuments","useEffect","collectionRef","orderBy","compareValue","length","where","fieldName","operator","unsubscribe","onSnapshot","snapshot","docs","map","doc","data","id"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,EAAT,QAAmB,oBAAnB;;AAEA,MAAMC,YAAY,GAAG,CAACC,UAAD,EAAaC,SAAb,KAA2B;AAAA;;AAC9C,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,EAAD,CAA1C;AAEAD,EAAAA,KAAK,CAACQ,SAAN,CAAgB,MAAM;AACpB,QAAIC,aAAa,GAAGP,EAAE,CAACE,UAAH,CAAcA,UAAd,EAA0BM,OAA1B,CAAkC,WAAlC,CAApB;;AACA,QAAIL,SAAJ,EAAe;AACb,UAAI,CAACA,SAAS,CAACM,YAAX,IAA2B,CAACN,SAAS,CAACM,YAAV,CAAuBC,MAAvD,EAA+D;AAC7D;AACAL,QAAAA,YAAY,CAAC,EAAD,CAAZ;AACA;AACD;;AAEDE,MAAAA,aAAa,GAAGA,aAAa,CAACI,KAAd,CACdR,SAAS,CAACS,SADI,EAEdT,SAAS,CAACU,QAFI,EAGdV,SAAS,CAACM,YAHI,CAAhB;AAKD;;AAED,UAAMK,WAAW,GAAGP,aAAa,CAACQ,UAAd,CAA0BC,QAAD,IAAc;AACzD,YAAMZ,SAAS,GAAGY,QAAQ,CAACC,IAAT,CAAcC,GAAd,CAAmBC,GAAD,KAAU,EAC5C,GAAGA,GAAG,CAACC,IAAJ,EADyC;AAE5CC,QAAAA,EAAE,EAAEF,GAAG,CAACE;AAFoC,OAAV,CAAlB,CAAlB;AAKAhB,MAAAA,YAAY,CAACD,SAAD,CAAZ;AACD,KAPmB,CAApB;AASA,WAAOU,WAAP;AACD,GA1BD,EA0BG,CAACZ,UAAD,EAAaC,SAAb,CA1BH;AA4BA,SAAOC,SAAP;AACD,CAhCD;;GAAMH,Y;;AAkCN,eAAeA,YAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { db } from '../firebase/config';\r\n\r\nconst useFirestore = (collection, condition) => {\r\n  const [documents, setDocuments] = useState([]);\r\n\r\n  React.useEffect(() => {\r\n    let collectionRef = db.collection(collection).orderBy('createdAt');\r\n    if (condition) {\r\n      if (!condition.compareValue || !condition.compareValue.length) {\r\n        // reset documents data\r\n        setDocuments([]);\r\n        return;\r\n      }\r\n\r\n      collectionRef = collectionRef.where(\r\n        condition.fieldName,\r\n        condition.operator,\r\n        condition.compareValue\r\n      );\r\n    }\r\n\r\n    const unsubscribe = collectionRef.onSnapshot((snapshot) => {\r\n      const documents = snapshot.docs.map((doc) => ({\r\n        ...doc.data(),\r\n        id: doc.id,\r\n      }));\r\n\r\n      setDocuments(documents);\r\n    });\r\n\r\n    return unsubscribe;\r\n  }, [collection, condition]);\r\n\r\n  return documents;\r\n};\r\n\r\nexport default useFirestore;\r\n"]},"metadata":{},"sourceType":"module"}